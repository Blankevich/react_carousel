{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","scroll","buttonPrev","props","step","itemWidth","setState","scrollprev","buttonNext","frameSize","images","scrollnext","maxScroll","length","this","animationDuration","className","style","width","transform","transition","map","image","src","alt","type","onClick","disabled","React","Component","App","changeStep","value","changeFrameSize","changeItemWidth","changeAnimationDuration","htmlFor","id","min","max","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e114354.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n};\n\ntype State = {\n  scroll: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    scroll: 0,\n  };\n\n  buttonPrev = () => {\n    const { step, itemWidth } = this.props;\n\n    this.setState((state) => {\n      const scrollprev = state.scroll - (step * itemWidth);\n\n      return (scrollprev >= 0)\n        ? { scroll: scrollprev }\n        : { scroll: 0 };\n    });\n  };\n\n  buttonNext = () => {\n    const {\n      step,\n      itemWidth,\n      frameSize,\n      images,\n    } = this.props;\n\n    this.setState((state) => {\n      const scrollnext = state.scroll + (step * itemWidth);\n      const maxScroll = (images.length - frameSize) * itemWidth;\n\n      return (scrollnext <= maxScroll)\n        ? { scroll: scrollnext }\n        : { scroll: maxScroll };\n    });\n  };\n\n  render() {\n    const {\n      scroll,\n    } = this.state;\n\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${-scroll}px)`,\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((image) => (\n            <li\n              key={image}\n              className=\"carousel__item\"\n            >\n              <img\n                src={image}\n                alt=\"img\"\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.buttonPrev}\n          disabled={scroll <= 0}\n        >\n          Prev\n        </button>\n        <button\n          className=\"button\"\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={this.buttonNext}\n          disabled={scroll === (images.length - frameSize) * itemWidth}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  changeStep = (value: number) => {\n    this.setState({ step: value });\n  };\n\n  changeFrameSize = (value: number) => {\n    this.setState({ frameSize: value });\n  };\n\n  changeItemWidth = (value: number) => {\n    this.setState({ itemWidth: value });\n  };\n\n  changeAnimationDuration = (value: number) => {\n    this.setState({ animationDuration: value });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"App__carousel\"\n          data-cy=\"title\"\n        >\n          Carousel with\n          {frameSize}\n          images\n        </h1>\n\n        <fieldset>\n          <label htmlFor=\"stepId\">Step</label>\n          <input\n            className=\"App__input\"\n            id=\"stepId\"\n            type=\"number\"\n            min=\"1\"\n            max={frameSize}\n            value={step}\n            onChange={({ target }) => {\n              this.changeStep(+target.value);\n            }}\n          />\n\n          <label htmlFor=\"frameId\">Frame size</label>\n          <input\n            className=\"App__input\"\n            id=\"frameId\"\n            type=\"number\"\n            min=\"3\"\n            max=\"10\"\n            value={frameSize}\n            onChange={({ target }) => {\n              this.changeFrameSize(+target.value);\n            }}\n          />\n          <label htmlFor=\"itemId\">Item width</label>\n          <input\n            className=\"App__input\"\n            id=\"itemId\"\n            type=\"number\"\n            min=\"130\"\n            max={1300 / frameSize}\n            value={itemWidth}\n            step=\"10\"\n            onChange={({ target }) => {\n              this.changeItemWidth(+target.value);\n            }}\n          />\n          <label htmlFor=\"animationDuration\">Animation duration</label>\n          <input\n            className=\"App__input\"\n            id=\"animationDuration\"\n            type=\"number\"\n            min=\"400\"\n            value={animationDuration}\n            step=\"100\"\n            onChange={({ target }) => {\n              this.changeAnimationDuration(+target.value);\n            }}\n          />\n        </fieldset>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}